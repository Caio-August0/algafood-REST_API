
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.url=jdbc:mysql://localhost/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC

# Gera o DDL, ou seja, usa a linguaguem de definiÃ§Ã£o de dados automaticamente
#Gerador de Schema
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create

#Configura as propiedades do hibernate com o dialeto proveninete da classe MySQL8Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Imprime o SQL gerado
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

#logging.level.org.springframework.orm.jpa=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#Habilitamos o lançamento de uma falha quando passamos uma propriedade a mais no JSON
spring.jackson.deserialization.fail-on-unknown-properties=true

#Habilitamos o lançamento de um falha quando passamos uma propiedade que está sendo ignorada.
spring.jackson.deserialization.fail-on-ignored-properties=true

#Configuramos para lançar a execption caso não exista um código mapeado para uma URL
spring.mvc.throw-exception-if-no-handler-found = true

#Desabilitas arquivo estáticos, para a configuração acima funcionar.
# Configura o uso do gerenciador padrão de resources no Spring.
# Com ela ativada o Spring gerencia as respostas padrão de erro 404
# por exemplo, impedindo o uso de um Exception Handler.
spring.web.resources.add-mappings=false